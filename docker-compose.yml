version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker-1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

# docker exec -it kafka-broker-1 bash                                                                             --> Inicia el bash desde consola
# kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic devKafka                                   --> Crea topic
# kafka-topics --bootstrap-server localhost:9092 --create --topic devKafka --partitions 3 --replication-factor 1  --> Crea topics con particiones


# kafka-console-producer --bootstrap-server kafka-broker-1:9092 --topic devKafka                                  --> Crea un productor
# kafka-console-consumer --bootstrap-server localhost:9092 --topic devKafka --from-beginning                       --> Crea un consumidor

# kafka-topics --list --bootstrap-server kafka-broker-1:9092                                                      --> lista los topics creados
# kafka-topics --describe --bootstrap-server localhost:9092 --topic devKafka
# kafka-topics --delete --bootstrap-server localhost:9092 --topic devKafka

